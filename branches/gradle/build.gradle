//apply plugin: 'java'
//apply plugin: 'idea'
//apply plugin: 'project-report'
apply from: 'master-build/master-build.gradle'

//ant.importBuild 'build/master-build/master-build.xml'

//check out gpars for complex stuff

version = "0.1-SNAPSHOT"
sourceCompatibility = 1.6
//
//configurations {
//  compile
//  presigned
//  dist
//  source
//  test
//  reporting
//}
//
//repositories {
//    mavenCentral()
//    ivy {
//      url "http://www.nurflugel.com/Home/repository"
//              layout 'pattern', {
//                  artifact "[organisation]/[module]/[revision]/[artifact]-[revision].[type]"
//                  ivy "[organisation]/[module]/[revision]/[artifact]-[revision].ivy.xml"
//      }
//    }
//}


dependencies {
    compile 'org.jdom:jdom:1.0',
        'net.java.dev.glazedlists:glazedlists_java15:1.8.0',
//        'ca.odell.glazedlists:jdk_1.5:1.8.0',
    'org.codehaus.xstream:xstream:1.2',
    'org.tmate:svnkit:1.3.0',
    'w3c:jtidy:04aug2000r7-dev',
    'com.ryangrier.ant:version_tool:1.1.4_fixed',
//    'com.nurflugel:buildtasks:1.0-SNAPSHOT',
    'org.apache:commons-lang:2.4',
    'org.apache:commons-io:1.4',
    'com.intellij:forms_rt:9.0.0',
    'com.intellij:javac2:9.0.0',
    'org.jdom:jdom:1.0',
    'org.testng:testng:5.8-jdk1.5',
    'org.objectweb.asm:asm:3.1',
    'javax.help:jhall:2.0.6'

    testCompile 'net.java.dev.glazedlists:glazedlists_java15:1.8.0',
//  'ca.odell.glazedlists:jdk_1.5:1.8.0',
    'org.jdom:jdom:1.0',
    'org.codehaus.xstream:xstream:1.2',
    'org.tmate:svnkit:1.3.0',
    'w3c:jtidy:04aug2000r7-dev',
    'com.ryangrier.ant:version_tool:1.1.4_fixed',
//    'com.nurflugel:buildtasks:1.0-SNAPSHOT',
    'org.apache:commons-lang:2.4',
    'org.apache:commons-io:1.4',
    'com.intellij:forms_rt:9.0.0',
    'com.intellij:javac2:9.0.0',
    'org.jdom:jdom:1.0',
    'org.testng:testng:5.8-jdk1.5',
    'org.objectweb.asm:asm:3.1',
    'javax.help:jhall:2.0.6'
}
//
//test {
// useTestNG()
//}
//
//task testFormat {
//   dependsOn "test", "formatTestResults"
//}


//<xslt in="@{testNgOutputDir}/testng-results.xml"
//                  style="${lib.test.formatTestNg}/testng-results.xsl"
//                  out="@{outputDir}/index.html">
//                <param name="testNgXslt.outputDir" expression="@{outputDir}/"/>
//                <param name="testNgXslt.sortTestCaseLinks" expression="true"/>
//                <param name="testNgXslt.testDetailsFilter" expression="FAIL,SKIP,PASS"/>
//                <classpath refid="classpath.testng.format"/>
//            </xslt>

//ant.xslt(in: '..', style: '..', out: '..) {
//    param(name: '..', expression: '..')
//}

task formatTestResults << {
  ant.xslt(in:  './build/reports/tests/testng-results.xml',
           out: './build/reports/tests/index.html',
           style: '/Users/douglasbullard/Documents/JavaStuff/testng-xslt-1.1.1/src/main/resources/testng-results.xsl',
           classpath: '/Users/douglasbullard/Documents/JavaStuff/testng-xslt-1.1.1/lib/saxon-8.7.jar'){
            param(name:'testNgXslt.testDetailsFilter', expression:"FAIL,SKIP,PASS")
            param(name:'testNgXslt.outputDir', expression:'$outputDir')
            param(name:'testNgXslt.sortTestCaseLinks', expression:'true')
  }
}


task copyLibs(type: Copy) {
    from('build/libs')
    into('build/distributions')
}

//  style: '/Users/douglasbullard/Documents/JavaStuff/Google_Code/IvyTools/branches/gradle/testng-results.xsl',


task zipSrc(type: Zip) {
    appendix = 'src'
    from sourceSets.main.allSource
    into('build/dist')
}


